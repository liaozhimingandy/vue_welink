{"version":3,"file":"js/721.5e67c891.js","mappings":"mGAMA,MAAMA,EAAU,KAGVC,EAAO,CACTC,cAAe,8BACfC,YAAa,uBACbC,UAAW,iCAGf,QAAiBH,OAAMD,U,6YCuBvB,MAAMK,GAAQC,EAAAA,EAAAA,MAERC,GAAOC,EAAAA,EAAAA,IAAS,CAAC,SAAY,UAAW,SAAY,WAGpDC,EAAQ,CACZC,SAAS,CAEP,CACEC,UAAU,EACVC,QAAS,UAETC,QAAS,QAEX,CACEC,IAAI,EACJC,IAAI,EACJH,QAAS,iBACTC,QAAS,SAGbG,SAAS,CACP,CACEL,UAAU,EACVC,QAAS,SAETC,QAAS,UAMTI,GAAYC,EAAAA,EAAAA,IAAI,MAChBC,GAASC,EAAAA,EAAAA,IAAO,UAEhBC,EAAQC,UACZL,EAAUM,MAAMC,UAASF,UACvB,IAAKG,EACH,OAAO,EAET,IAAIC,EAAgBC,EAAAA,EAAAA,KAAAA,UAAwB,aAAepB,EAAKG,SAAW,IAAMH,EAAKS,SAAW,mBAE3FG,EAAO,CAACS,IAAKF,EAAeG,OAAQ,QACrCC,MAAMC,IAELC,aAAaC,QAAQ,eAAgBF,EAASG,cAC9CF,aAAaC,QAAQ,gBAAiBF,EAASI,eAC/CH,aAAaC,QAAQ,MAAOF,EAASK,KACrCJ,aAAaC,QAAQ,YAAaF,EAASM,WAC3CL,aAAaC,QAAQ,WAAYF,EAASrB,WAC1C4B,EAAAA,EAAAA,IAAe,CAACC,MAAO,OAAQ3B,QAAS,OAAQ4B,KAAM,YAGtDC,OAAOC,SAASC,QAAQtC,EAAMA,MAAMuC,OAAOC,MAAMC,UAAY,IAAI,IAGlEC,OAAOC,KAENV,EAAAA,EAAAA,IAAe,CAACC,MAAO,OAAQ3B,QAASoC,EAAMjB,SAASkB,KAAKC,IAAKV,KAAM,QAAQ,GAC/E,GACN,EAKEW,EAAa,KACjB9C,EAAMA,MAAM+C,MAAM,aAAaC,aAAa,E,m3CClG9C,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://web/./src/const/const.js","webpack://web/./src/view/LoginView.vue","webpack://web/./src/view/LoginView.vue?b065"],"sourcesContent":["/*\r\n* 全局常量配置区\r\n*\r\n* */\r\n\r\n// 动态刷新间隔, 2分钟\r\nconst refresh = 120000;\r\n\r\n// 接口地址列表\r\nconst apis = {\r\n    moment_lasted: \"/api/moment/moments/lasted/\",\r\n    moment_push: \"/api/moment/moments/\",\r\n    authorize: '/api/v2/user/oauth/authorize/'\r\n}\r\n\r\nexport default { apis, refresh };\r\n","<template>\r\n  <div class=\"login_container\">\r\n    <div class=\"login_box\">\r\n      <!-- 头像区域 -->\r\n      <div class=\"avatar_box\">\r\n        <img src=\"../assets/logo.png\" alt=\"\"/>\r\n      </div>\r\n      <!-- 登录表单区域 -->\r\n      <el-form ref=\"form_data\" :model=\"user\" :rules=\"rules\" label-width=\"100px\" class=\"login_form\">\r\n        <h4>登录</h4>\r\n        <el-form-item label=\"用户名\" prop=\"username\">\r\n          <el-input v-model=\"user.username\" placeholder=\"账号:zhiming\" clearable :style=\"{width: '100%'}\"\r\n                    :prefix-icon='UserFilled'>\r\n          </el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\" prop=\"password\">\r\n          <el-input v-model=\"user.password\" placeholder=\"请输入密码:123456\" clearable show-password\r\n                    :style=\"{width: '100%'}\" :prefix-icon='Lock' />\r\n        </el-form-item>\r\n        <!-- 按钮区域 -->\r\n        <el-row justify=\"end\">\r\n          <el-form-item size=\"large\" class=\"login_btn\">\r\n            <el-button link><router-link to=\"/register/\">新用户注册</router-link></el-button>\r\n            <el-button type=\"primary\" @click=\"login\">登录</el-button>\r\n            <el-button @click=\"reset_form\">重置</el-button>\r\n          </el-form-item>\r\n        </el-row>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport {ref, reactive, inject, getCurrentInstance} from 'vue'\r\nimport { ElNotification } from 'element-plus'\r\nimport { UserFilled, Lock} from '@element-plus/icons-vue'\r\n// 定义接收的参数\r\nimport $const from '../const/const'\r\nconst proxy = getCurrentInstance()\r\n// 用户模型\r\nconst user = reactive({'username': 'zhiming', 'password': '123456'});\r\n\r\n// 表单验证rules,要在前面指定prop\r\nconst rules = {\r\n  username:[\r\n    // 书写验证规则\r\n    {\r\n      required: true,\r\n      message: '用户名不能为空',\r\n      // 失去焦点的时候触发\r\n      trigger: 'blur'\r\n    },\r\n    {\r\n      min:4,\r\n      max:8,\r\n      message: '用户名长度必须是4-8个字符',\r\n      trigger: 'blur'\r\n    },\r\n  ],\r\n  password:[\r\n    {\r\n      required: true,\r\n      message: '密码不能为空',\r\n      // 失去焦点的时候触发\r\n      trigger: 'blur'\r\n    },\r\n  ]\r\n}\r\n\r\n// setup里拿到el-form节点\r\nconst form_data = ref(null)\r\nconst $axios = inject(\"$axios\");\r\n\r\nconst login = async () =>{\r\n  form_data.value.validate(async (valid) => {\r\n    if (!valid) {\r\n      return false\r\n    }\r\n    let authorize_url = $const.apis.authorize + 'test/test/' + user.username + '/' + user.password + '/password/'\r\n    // 异步请求后台登录接口\r\n    await $axios({url: authorize_url, method: 'get'})\r\n        .then((response)=>{\r\n          // 保存数据到本地存储\r\n          localStorage.setItem('access_token', response.access_token);\r\n          localStorage.setItem('refresh_token', response.refresh_token);\r\n          localStorage.setItem('uid', response.uid);\r\n          localStorage.setItem('nick_name', response.nick_name);\r\n          localStorage.setItem('username', response.username);\r\n          ElNotification({title: '温馨提示', message: '登录成功', type: 'success'});\r\n\r\n          // 登录成功后台跳转到原页面\r\n          window.location.replace(proxy.proxy.$route.query.redirect || '/')\r\n\r\n        })\r\n        .catch((error)=>{\r\n          // 对于非200都将执行此段代码\r\n          ElNotification({title: '错误提示', message: error.response.data.msg, type: 'info'})\r\n        })\r\n  });\r\n}\r\n\r\n\r\n// 重置表达\r\nconst reset_form = ()=>{\r\n  proxy.proxy.$refs['form_data'].resetFields();\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n#app{\r\n  margin: 0;\r\n}\r\n\r\n.login_container {\r\n  background-image: linear-gradient(to right, #fbc2eb, #a6c1ee);\r\n  height: 100vh;\r\n}\r\n.login_box {\r\n  // 宽450像素\r\n  width: 450px;\r\n  // 高300像素\r\n  height: 300px;\r\n  // 背景颜色\r\n  background-color: #fff;\r\n  // 圆角边框3像素\r\n  border-radius: 3px;\r\n  // 绝对定位\r\n  position: absolute;\r\n  // 距离左则50%\r\n  left: 50%;\r\n  // 上面距离50%\r\n  top: 50%;\r\n  // 进行位移，并且在横轴上位移-50%，纵轴也位移-50%\r\n  transform: translate(-50%, -50%);\r\n  .avatar_box {\r\n    // 盒子高度130像素\r\n    height: 130px;\r\n    // 宽度130像素\r\n    width: 130px;\r\n    // 边框线1像素 实线\r\n    border: 1px solid #eee;\r\n    // 圆角\r\n    border-radius: 50%;\r\n    // 内padding\r\n    padding: 10px;\r\n    // 添加阴影 向外扩散10像素 颜色ddd\r\n    box-shadow: 0 0 10px #ddd;\r\n    // 绝对定位\r\n    position: absolute;\r\n    // 距离左则\r\n    left: 50%;\r\n    // 位移\r\n    transform: translate(-50%, -50%);\r\n    // 背景\r\n    background-color: #fff;\r\n    img {\r\n      width: 100%;\r\n      height: 100%;\r\n      border-radius: 50%;\r\n      background-color: #eee;\r\n    }\r\n  }\r\n}\r\n.login_form {\r\n  position: absolute;\r\n  bottom: 0;\r\n  width: 100%;\r\n  padding: 0 20px;\r\n  box-sizing: border-box;\r\n}\r\n.login_btn {\r\n  // 设置弹性布局\r\n  display: flex;\r\n  // 横轴上尾部对齐\r\n  justify-content: flex-end;\r\n}\r\n\r\n</style>","import script from \"./LoginView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./LoginView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./LoginView.vue?vue&type=style&index=0&id=ac7d7f4a&lang=less&scoped=true\"\n\nimport exportComponent from \"D:\\\\pycharm\\\\welink\\\\web\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-ac7d7f4a\"]])\n\nexport default __exports__"],"names":["refresh","apis","moment_lasted","moment_push","authorize","proxy","getCurrentInstance","user","reactive","rules","username","required","message","trigger","min","max","password","form_data","ref","$axios","inject","login","async","value","validate","valid","authorize_url","$const","url","method","then","response","localStorage","setItem","access_token","refresh_token","uid","nick_name","ElNotification","title","type","window","location","replace","$route","query","redirect","catch","error","data","msg","reset_form","$refs","resetFields","__exports__"],"sourceRoot":""}